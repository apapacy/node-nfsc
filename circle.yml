---
version: 2
executorType: machine
containerInfo:
  - image: node:4.5.0
stages:
  build:
    workDir: ~/node-nfsc
    steps:
      - type: checkout
      - type: shell
        name: dependencies
        command: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install -y gcc-4.9 g++-4.9 \
                                  krb5-multidev libkrb5-dev \
                                  rpcbind flex
      - type: shell
        name: install NFSd
        command: |
          git clone git@github.com:nfs-ganesha/nfs-ganesha.git -b V2.4.3
          ( cd nfs-ganesha && git submodule update --init )
          mkdir nfs-ganesha/build
          ( cd nfs-ganesha/build && cmake  ../src )
          make -C nfs-ganesha/build -j 5
          sudo make -C nfs-ganesha/build install
      - type: shell
        name: spawn NFSd
        command: |
          sudo mkdir -p /artifacts /nfs /var/lib/nfs/ganesha/v4old/node0
          sudo chown $(id -un):$(id -gn) /nfs
          sudo sed -i s,/nonexistant,/nfs,g /etc/ganesha/ganesha.conf
          sudo ganesha.nfsd -N DEBUG -L /artifacts/ganesha.log
          ITER=0
          while ! grep 'NFS Server Now NOT IN GRACE' /artifacts/ganesha.log ; do
            ITER=$((ITER+1))
            if [ $ITER -gt 65 ] ; then
              echo "WARNING: Timeout will waiting for the grace period to end">&2
              break
            fi
            if ! pidof ganesha.nfsd > /dev/null ; then
              echo "ERROR: ganesha.nfsd is not running">&2
              break
            fi
            echo "waiting for grace period to end"
            sleep 1
          done
      - type: shell
        name: compile
        environment:
          CC: gcc-4.9
          CXX: g++-4.9
        command: |
          npm install
      - type: shell
        name: configure test
        command: |
          cp tests/config.json.ci tests/config.json
      - type: shell
        name: run tests
        command: |
          npm test
      - type: artifacts-store
        path: /artifacts
        destination: artifacts
